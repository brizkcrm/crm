{"version":3,"file":"static/js/4437.9b7bd63d.chunk.js","mappings":"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","sources":["pages/User/UserList.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Button } from \"primereact/button\";\r\nimport { Column } from \"primereact/column\";\r\nimport { DataTable, DataTableSelection } from \"primereact/datatable\";\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport { Toast } from \"primereact/toast\";\r\nimport { shallowEqual } from \"react-redux\";\r\nimport { useAppDispatch, useAppSelector } from \"../../utilities/hooks\";\r\nimport { userActions } from \"../../store/user/userSlice\";\r\nimport { IAppState } from \"../../models/appState\";\r\nimport { IUser } from \"../../models/user\";\r\n\r\nconst UserList: React.FC = () => {\r\n  const [selectedItem, setSelectedItem] = useState<DataTableSelection<IUser[]>>(\r\n    []\r\n  );\r\n  const [globalFilter, setGlobalFilter] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const dt = useRef(null);\r\n  const toast = useRef(null);\r\n  const users: IUser[] = useAppSelector(\r\n    (state: IAppState) => state.users.users,\r\n    shallowEqual\r\n  );\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(userActions.getUsers());\r\n  }, [dispatch]);\r\n\r\n  const onAddClick = () => {\r\n    navigate(\"/user/add\");\r\n  };\r\n\r\n  const onExportClick = () => {\r\n    (dt.current as any).exportCSV();\r\n  };\r\n\r\n  const editItem = (rowData: any) => {\r\n    navigate(`/user/edit/${rowData.id}`);\r\n  };\r\n\r\n  const onSearchInput = (e: any) => {\r\n    (dt.current as any).reset();\r\n    setGlobalFilter(e.target.value);\r\n  };\r\n\r\n  const header = (\r\n    <div className=\"table-header\">\r\n      <span className=\"p-input-icon-left\">\r\n        <i className=\"pi pi-search\" />\r\n        <InputText\r\n          type=\"search\"\r\n          onInput={onSearchInput}\r\n          placeholder=\"Search...\"\r\n        />\r\n      </span>\r\n    </div>\r\n  );\r\n\r\n  const adminBodyTemplate = (rowData: any): string => {\r\n    return rowData.isAdmin ? \"Yes\" : \"No\";\r\n  };\r\n\r\n  const statusBodyTemplate = (rowData: any): string => {\r\n    return rowData.status ? \"Active\" : \"Inactive\";\r\n  };\r\n\r\n  const actionBodyTemplate = (rowData: any) => {\r\n    return (\r\n      <>\r\n        <Button\r\n          icon=\"pi pi-pencil\"\r\n          className=\"p-button-rounded p-button-outlined mr-2\"\r\n          tooltip=\"Edit\"\r\n          onClick={() => editItem(rowData)}\r\n        />\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Toast ref={toast} />\r\n      <div className=\"grid pt-2\">\r\n        <div className=\"col text-left\">\r\n          <h3 className=\"caption\">Users</h3>\r\n        </div>\r\n        <div className=\"col text-right\">\r\n          <Button\r\n            icon=\"pi pi-plus\"\r\n            className=\"p-button-rounded p-button-outlined\"\r\n            tooltip=\"Add User\"\r\n            onClick={onAddClick}\r\n          />\r\n          &nbsp;\r\n          <Button\r\n            icon=\"pi pi-external-link\"\r\n            className=\"p-button-rounded p-button-outlined\"\r\n            tooltip=\"Export Users\"\r\n            onClick={onExportClick}\r\n          />\r\n        </div>\r\n      </div>\r\n      <DataTable\r\n        ref={dt}\r\n        dataKey=\"id\"\r\n        value={users}\r\n        paginator\r\n        rows={10}\r\n        rowsPerPageOptions={[10, 25, 50, 100]}\r\n        selectionMode=\"single\"\r\n        selection={selectedItem}\r\n        onSelectionChange={(e) => setSelectedItem(e.value)}\r\n        resizableColumns\r\n        globalFilter={globalFilter}\r\n        header={header}\r\n        showGridlines\r\n      >\r\n        <Column field=\"firstName\" header=\"First Name\" sortable></Column>\r\n        <Column field=\"lastName\" header=\"Last Name\" sortable></Column>\r\n        <Column field=\"email\" header=\"Email\" sortable></Column>\r\n        <Column\r\n          field=\"isAdmin\"\r\n          header=\"Admin\"\r\n          body={adminBodyTemplate}\r\n          sortable\r\n        ></Column>\r\n        <Column field=\"phoneWork\" header=\"Office Phone\" sortable></Column>\r\n        <Column\r\n          field=\"status\"\r\n          header=\"Status\"\r\n          body={statusBodyTemplate}\r\n          sortable\r\n        ></Column>\r\n        <Column\r\n          body={actionBodyTemplate}\r\n          exportable={false}\r\n          style={{ minWidth: \"4rem\" }}\r\n        ></Column>\r\n      </DataTable>\r\n      <p>* Table columns are sortable and resizable.</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","selectedItem","setSelectedItem","_useState3","_useState4","globalFilter","setGlobalFilter","navigate","useNavigate","dt","useRef","toast","users","useAppSelector","state","shallowEqual","dispatch","useAppDispatch","useEffect","userActions","getUsers","header","_jsx","className","children","_jsxs","InputText","type","onInput","e","current","reset","target","value","placeholder","_Fragment","Toast","ref","Button","icon","tooltip","onClick","exportCSV","DataTable","dataKey","paginator","rows","rowsPerPageOptions","selectionMode","selection","onSelectionChange","resizableColumns","showGridlines","Column","field","sortable","body","rowData","isAdmin","status","concat","id","editItem","exportable","style","minWidth"],"sourceRoot":""}